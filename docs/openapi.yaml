openapi: 3.0.1
info:
  title: L0 Auth
  description: Authorization Service
  license:
    name: MIT
    url: https://github.com/tiki/l0-auth/blob/main/LICENSE
  version: 0.0.2
servers:
- url: https://auth.l0.mytiki.com
paths:
  /api/latest/userinfo:
    get:
      tags:
      - AUTH
      operationId: get_1
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoAO'
    post:
      tags:
      - AUTH
      operationId: update
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoAOUpdate'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoAO'
  /api/latest/otp/start:
    post:
      tags:
      - AUTH
      operationId: issue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtpAOStartReq'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OtpAOStartRsp'
  /api/latest/oauth/token:
    post:
      tags:
      - AUTH
      operationId: tokenGrantPw_1_1
      parameters:
      - name: grant_type
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AuthorizationGrantType'
      - name: scope
        in: query
        required: false
        schema:
          type: string
      - name: username
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      - name: audience
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: refresh_token
        in: query
        required: true
        schema:
          type: string
      - name: assertion
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2AccessTokenResponse'
  /api/latest/oauth/revoke:
    post:
      tags:
      - AUTH
      operationId: revoke
      parameters:
      - name: token
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /health:
    get:
      tags:
      - HEALTH
      operationId: get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              example:
                message: OK
  /.well-known/jwks.json:
    get:
      tags:
      - AUTH
      operationId: get_2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
components:
  schemas:
    UserInfoAOUpdate:
      type: object
      properties:
        email:
          type: string
    UserInfoAO:
      type: object
      properties:
        sub:
          type: string
        email:
          type: string
        updated_at:
          type: string
          format: date-time
    OtpAOStartReq:
      type: object
      properties:
        email:
          type: string
        notAnonymous:
          type: boolean
    OtpAOStartRsp:
      type: object
      properties:
        deviceId:
          type: string
        expires:
          type: string
          format: date-time
    AuthorizationGrantType:
      type: object
      properties:
        value:
          type: string
    OAuth2AccessToken:
      type: object
      properties:
        tokenValue:
          type: string
        issuedAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
        tokenType:
          $ref: '#/components/schemas/TokenType'
        scopes:
          uniqueItems: true
          type: array
          items:
            type: string
    OAuth2AccessTokenResponse:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/OAuth2AccessToken'
        refreshToken:
          $ref: '#/components/schemas/OAuth2RefreshToken'
        additionalParameters:
          type: object
          additionalProperties:
            type: object
    OAuth2RefreshToken:
      type: object
      properties:
        tokenValue:
          type: string
        issuedAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
    TokenType:
      type: object
      properties:
        value:
          type: string
    ApiError:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        detail:
          type: string
        help:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
