name: Release

on:
  pull_request:
    branches:
      - main
#    types:
#      - closed

permissions:
  contents: write
  id-token: write

# Cancel any active builds when new commits are pushed
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  role:
    runs-on: ubuntu-latest
    #if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubDeployBase
          role-session-name: ${{ vars.SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: SetVars
        run: |
          sed -i 's/${AWS::AccountId}/${{ secrets.AWS_ACCOUNT_ID }}/' infra/role/template.yml

      - name: SAM Role
        run: cd infra/role && sam build && sam package && sam deploy

  push:
    runs-on: ubuntu-latest
    needs: role
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Maven Package
        run: mvn clean package -Dmaven.test.skip

      - name: Maven project version
        id: version
        run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubDeployCoreAccountService
          role-session-name: ${{ vars.SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          target: production
          push: true
          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/core-account-service:${{ steps.version.outputs.version }}
          build-args: JAR_FILE=target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: push
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubDeployCoreAccountService
          role-session-name: ${{ vars.SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Maven project version
        id: version
        run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: SAM Publish
        run: |
          cd infra/service
          sam build --parameter-overrides ParameterKey=Subnets,ParameterValue=${{ secrets.SUBNETS }} ParameterKey=VpcId,ParameterValue=${{ secrets.VPCID }} ParameterKey=Certificate,ParameterValue=${{ secrets.CERTIFICATE }} ParameterKey=Username,ParameterValue=${{ secrets.SPRING_DATASOURCE_USERNAME }} ParameterKey=Password,ParameterValue=${{ secrets.SPRING_DATASOURCE_PASSWORD }} ParameterKey=DeployRole,ParameterValue=${{ vars.DEPLOYROLE }} ParameterKey=ExecutionRole,ParameterValue=${{ secrets.EXECUTIONROLE }} ParameterKey=Secret,ParameterValue=${{ secrets.SECRETARN }} ParameterKey=Version,ParameterValue=${{ steps.version.outputs.version }}
          sam package
          sam deploy --parameter-overrides ParameterKey=Subnets,ParameterValue=${{ secrets.SUBNETS }} ParameterKey=VpcId,ParameterValue=${{ secrets.VPCID }} ParameterKey=Certificate,ParameterValue=${{ secrets.CERTIFICATE }} ParameterKey=Username,ParameterValue=${{ secrets.SPRING_DATASOURCE_USERNAME }} ParameterKey=Password,ParameterValue=${{ secrets.SPRING_DATASOURCE_PASSWORD }} ParameterKey=DeployRole,ParameterValue=${{ vars.DEPLOYROLE }} ParameterKey=ExecutionRole,ParameterValue=${{ secrets.EXECUTIONROLE }} ParameterKey=Secret,ParameterValue=${{ secrets.SECRETARN }} ParameterKey=Version,ParameterValue=${{ steps.version.outputs.version }}

  publish:
    runs-on: ubuntu-latest
    needs: deploy
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Maven project version
        id: version
        run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

#      - name: OpenApi
#        uses: readmeio/rdme@8.6.6
#        with:
#          rdme: openapi openapi.yaml --key=${{ secrets.README_API_KEY }} --id=65713595281a77007e17e5e1

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version.outputs.version }}
