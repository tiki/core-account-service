name: Release

on:
  pull_request:
    branches:
      - main
#    types:
#      - closed

permissions:
  contents: write
  id-token: write

# Cancel any active builds when new commits are pushed
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  role:
    runs-on: ubuntu-latest
    #if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubDeployBase
          role-session-name: ${{ vars.SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: SetVars
        run: |
          sed -i 's/${AWS::AccountId}/${{ secrets.AWS_ACCOUNT_ID }}/' infra/role/template.yml

      - name: SAM Role
        run: cd infra/role && sam build && sam package && sam deploy

#  push:
#    runs-on: ubuntu-latest
#    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
#    environment: Production
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Set up JDK
#        uses: actions/setup-java@v3
#        with:
#          java-version: '20'
#          distribution: 'zulu'
#
#      - name: Maven Package
#        run: mvn clean package -Dmaven.test.skip
#
#      - name: Maven project version
#        id: version
#        run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
#
#      - name: AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubDeployCoreIcebergCatalog
#          role-session-name: ${{ vars.SESSION_NAME }}
#          aws-region: ${{ vars.AWS_REGION }}
#
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          target: production
#          push: true
#          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/core-account-service:${{ steps.version.outputs.version }}
#          build-args: |
#            JAR_FILE=target/*.jar
#
#    outputs:
#      version: ${{ steps.version.outputs.version }}
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: [ test_and_push ]
#    environment: Production
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Setup Terraform Variables
#        working-directory: ./infra
#        run: |-
#          cat > pipeline.auto.tfvars <<EOF
#          sem_ver = "${{ needs.test_and_push.outputs.version }}"
#          EOF
#
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v3
#        with:
#          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
#
#      - name: Terraform Format
#        id: fmt
#        run: terraform fmt
#        working-directory: infra
#
#      - name: Terraform Init
#        id: init
#        run: terraform init
#        working-directory: infra
#
#      - name: Terraform Apply
#        id: apply
#        run: terraform apply -auto-approve
#        working-directory: infra
#
#  sentry:
#    runs-on: ubuntu-latest
#    needs: deploy_to_infra
#    environment: Production
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#
#      - name: Create Sentry release
#        uses: getsentry/action-release@v1
#        env:
#          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#          SENTRY_ORG: 'my-tiki'
#          SENTRY_PROJECT: 'account'
#        with:
#          environment: public
#          ignore_missing: true
#          ignore_empty: true
#
#  publish:
#    runs-on: ubuntu-latest
#    needs: [ sentry_release, test_and_push ]
#    environment: Production
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: OpenApi
#        uses: readmeio/rdme@8.6.6
#        with:
#          rdme: openapi openapi.yaml --key=${{ secrets.README_API_KEY }} --id=63c6011fa9d9d30086fb6427
#
#      - name: Release
#        uses: ncipollo/release-action@v1
#        with:
#          tag: ${{ needs.test_and_push.outputs.version }}
