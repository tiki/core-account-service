name: Version

on:
  pull_request:
    branches:
      - main

# Cancel any active builds when new commits are pushed
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  Version:
    if: startsWith(github.head_ref, 'release/')
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_USER: tester
          POSTGRES_PASSWORD: pgtestpw
          POSTGRES_DB: l0_auth
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'zulu'

      - name: Checkout PR
        id: getpr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr checkout ${{ github.event.pull_request.number }}
          export PR_BRANCH=$(git branch --show-current)
          echo "branch=$PR_BRANCH" >> $GITHUB_OUTPUT

      - name: Get Version
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: ${{ steps.getpr.outputs.branch }}

      - name: Set Version
        run: |
          sed -i '0,/<version>*.*.*<\/version>/s//<version>${{ steps.semver.outputs.nextStrict }}<\/version>/' pom.xml

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'zulu'

      - name: Install CLI
        uses: dopplerhq/cli-action@v2

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client

      - name: Create Tables
        run: psql -h localhost -d l0_auth -U tester -f database/create_tables.sql
        env:
          PGPASSWORD: pgtestpw

      - name: OAS3
        run: doppler run -c tst -- mvn clean verify
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_ST }}

      - name: Commit Changes
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GH Action"
          git add pom.xml
          git add openapi.yaml
          git commit -m 'version bump'
          git push

    outputs:
      version: ${{ steps.semver.outputs.nextStrict }}
