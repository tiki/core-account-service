name: Tests

on:
  pull_request:
    branches:
      - main

# Cancel any active builds when new commits are pushed
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  JUnit:
    runs-on: ubuntu-latest
    environment: Test
    env:
      ACCOUNT_JWT_KID: ${{ secrets.ACCOUNT_JWT_PRIVATE_KEY }}
      ACCOUNT_JWT_PRIVATE_KEY: ${{ secrets.ACCOUNT_JWT_PRIVATE_KEY }}
      ACCOUNT_OAUTH_CLIENT_CREDENTIALS_INTERNAL_JSON: ${{ secrets.ACCOUNT_OAUTH_CLIENT_CREDENTIALS_INTERNAL_JSON }}
      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      SPRING_DATASOURCE_USERNAME: ${{ vars.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ vars.SPRING_DATASOURCE_PASSWORD }}
      SPRING_DATASOURCE_URL: ${{ vars.SPRING_DATASOURCE_URL }}
      README_SECRET: ${{ secrets.README_SECRET }}
      GITHUB_OAUTH_ID: ${{ vars.GH_OAUTH_ID }}
      GITHUB_OAUTH_SECRET: ${{ secrets.GH_OAUTH_SECRET }}
      GOOGLE_OAUTH_ID: ${{ secrets.GOOGLE_OAUTH_ID }}
      GOOGLE_OAUTH_SECRET: ${{ secrets.GOOGLE_OAUTH_SECRET }}
      STRIPE_SECRET: ${{ secrets.STRIPE_SECRET }}
      STRIPE_PRICE: ${{ secrets.STRIPE_PRICE }}
      OCEAN_BUCKET: ${{ vars.OCEAN_BUCKET }}
      OCEAN_REGION: ${{ vars.OCEAN_REGION }}
      OCEAN_CATALOG: ${{ secrets.OCEAN_CATALOG }}
      OCEAN_ARN_STATE: ${{ secrets.OCEAN_ARN_STATE }}
      OCEAN_ARN_LOCATION: ${{ secrets.OCEAN_ARN_LOCATION }}
      OCEAN_ARN_EXEC: ${{ secrets.OCEAN_ARN_EXEC }}
      OCEAN_ARN_ADMIN: ${{ secrets.OCEAN_ARN_ADMIN }}

    services:
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_USER: ${{ vars.SPRING_DATASOURCE_USERNAME }}
          POSTGRES_PASSWORD: ${{ vars.SPRING_DATASOURCE_PASSWORD }}
          POSTGRES_DB: account_service
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '20'
          distribution: 'corretto'

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client

      - name: Create Tables
        run: psql -h localhost -d account_service -U tester -f database/create_tables.sql
        env:
          PGPASSWORD: ${{ vars.SPRING_DATASOURCE_PASSWORD }}

      - name: Maven Package
        run: mvn clean package

      - name: Upload Results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: test-results
          path: target/surefire-reports/**/*.xml
